

#include <Adafruit_SSD1306.h>

Adafruit_SSD1306 display(128,32,&Wire, -1);

// 'DinossauroBebadologoBWl', 103x64px
const unsigned char DinossauroBebadoLogo [] PROGMEM = {
  0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x80, 0x07, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x80, 0x00, 0x7f, 0xff, 0xff, 0xfe, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x03, 0xff, 
  0xff, 0xff, 0xff, 0xfe, 0x80, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x80, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xfe, 0xc0, 0x00, 
  0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0xc0, 0x0f, 0xe0, 0x03, 0xe0, 
  0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xfe, 0xe0, 0x1f, 0xfe, 0x00, 0xc0, 0x00, 0x00, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xfe, 0xf0, 0x1f, 0xff, 0x81, 0x80, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 
  0xff, 0xfe, 0xf8, 0x0f, 0xff, 0xf3, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xfe, 0xf8, 
  0x0f, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xfe, 0xfc, 0x07, 0xff, 0xfc, 
  0x00, 0x7c, 0xe7, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xfe, 0xfe, 0x03, 0xff, 0xf8, 0x00, 0xfe, 0x60, 
  0xdf, 0xe0, 0x0f, 0xff, 0xff, 0xfe, 0xff, 0x03, 0xff, 0xf0, 0x01, 0xff, 0x30, 0x9f, 0xe0, 0x07, 
  0xff, 0xff, 0xfe, 0xff, 0x81, 0xff, 0xf0, 0x03, 0xff, 0x38, 0xff, 0x80, 0x07, 0xff, 0xff, 0xfe, 
  0xff, 0xc0, 0xff, 0xe0, 0x0f, 0xff, 0x3f, 0xff, 0x00, 0x03, 0xff, 0xff, 0xfe, 0xff, 0xf0, 0x7f, 
  0xe0, 0x0f, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0xfe, 0xff, 0xf8, 0x3f, 0xc0, 0x07, 0xff, 
  0xff, 0xf4, 0x00, 0x01, 0xff, 0xff, 0xfe, 0xff, 0xfc, 0x0f, 0xc0, 0x3f, 0xff, 0xf0, 0x60, 0x00, 
  0x00, 0xff, 0xff, 0xfe, 0xff, 0xfe, 0x07, 0x80, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xff, 
  0xfe, 0xff, 0xff, 0x03, 0x80, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xff, 0xff, 
  0xc1, 0x80, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0xe0, 0xc0, 0x0f, 
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0xf0, 0x30, 0x0f, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0xf8, 0x18, 0x3f, 0xff, 0xff, 0x89, 0x00, 0x00, 0x3f, 
  0xff, 0xfe, 0xff, 0xff, 0xfe, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xfe, 0xff, 
  0xff, 0xff, 0x03, 0x0f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0xc1, 
  0x8f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0x60, 0x6f, 0xf8, 0xfc, 
  0x3e, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0x18, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0x0c, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfe, 
  0xff, 0xff, 0xfe, 0x03, 0x07, 0xf8, 0x00, 0x1f, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 
  0x01, 0x81, 0xf8, 0x00, 0x3f, 0xf0, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0x00, 0x60, 0xe8, 
  0x00, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0x00, 0x30, 0x30, 0x01, 0xff, 0xf8, 
  0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0x00, 0xbc, 0x0c, 0x01, 0xff, 0xfc, 0x00, 0x3f, 0xff, 
  0xfe, 0xff, 0xff, 0xfe, 0x00, 0xfe, 0x06, 0x01, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xfe, 0xff, 0xff, 
  0xff, 0x00, 0xff, 0x81, 0x81, 0xff, 0xfc, 0x00, 0x6f, 0xff, 0xfe, 0xff, 0xff, 0xff, 0x03, 0xff, 
  0xe0, 0xe7, 0xff, 0xfc, 0x00, 0x67, 0xff, 0xfe, 0xff, 0xff, 0xff, 0x07, 0xff, 0x70, 0x3f, 0x9f, 
  0xf8, 0x00, 0x43, 0xff, 0xfe, 0xff, 0xff, 0xff, 0x07, 0xff, 0x0c, 0x0c, 0x83, 0xf0, 0x00, 0x40, 
  0xff, 0xfe, 0xff, 0xff, 0xff, 0x87, 0xff, 0x83, 0x03, 0x81, 0xf0, 0x00, 0xe0, 0x7f, 0xfe, 0xff, 
  0xff, 0xff, 0x9f, 0xfe, 0x60, 0x80, 0xc0, 0xf0, 0x00, 0xf8, 0x3f, 0xfe, 0xff, 0xff, 0xff, 0xdf, 
  0xfe, 0x3c, 0xe0, 0x70, 0xf0, 0x00, 0xfc, 0x1f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xf8, 
  0x1c, 0x70, 0x01, 0xfe, 0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x0e, 0x07, 0x70, 0x01, 
  0xff, 0x03, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0x81, 0xd0, 0x03, 0xff, 0x81, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xe0, 0x38, 0x07, 0xff, 0xc0, 0xfe, 0xff, 0xff, 0xff, 
  0xff, 0xfb, 0x80, 0x03, 0xb8, 0x0e, 0x07, 0xff, 0xe0, 0x7e, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xce, 
  0x00, 0x8e, 0x03, 0x8f, 0xff, 0xf0, 0x3e, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7a, 0x00, 0x83, 0x80, 
  0xff, 0xff, 0xf0, 0x1e, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x04, 0x01, 0xe1, 0xe0, 0x1f, 0xff, 0xf8, 
  0x0e, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x06, 0x00, 0xff, 0xf8, 0x07, 0xff, 0xfc, 0x06, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xee, 0x00, 0xff, 0xfc, 0x02, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x00, 0x00, 0x00, 0x03, 0x80, 0x1f, 0xfc, 0x02, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
  0x07, 0xe0, 0x01, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe
};




void setup()   
{                
  // initialize with the I2C addr 0x3C
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  
  Serial.begin(57600);
  // Clear the buffer.
  display.clearDisplay();

  // Display bitmap
  display.drawBitmap(10, 0,  DinossauroBebadoLogo, 103, 64, WHITE);
 
  display.fillRect(0, 0, 10, 64, WHITE);
   display.fillRect(113, 0, 20, 64, WHITE);
   display.display();

  // Invert Display
 
}

void loop() {

  
  display.fillCircle(64,16,7, WHITE);
  for(int i=0;i<=14;i++){
  display.fillCircle(64,i,7,BLACK);
  display.display();}
  delay(800);
  display.clearDisplay();
  
  
 
  
  
 }
 
